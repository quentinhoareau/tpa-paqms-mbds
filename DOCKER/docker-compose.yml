version: "3.3"
networks:
  net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/24

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.0
    hostname: zookeeper
    container_name: zookeeper-iot
    ports:
      - 2181:2181
    networks:
      - net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181


  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.1.3-java8
    container_name: namenode
    hostname: namenode
    volumes:
      - namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    healthcheck:
      interval: 5s
      retries: 100
    networks:
      - net
    ports:
      - 9870:9870
      - 8020:8020
      - 9000:9000
#
  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.1.3-java8
    container_name: datanode
    hostname: datanode
    volumes:
      - datanode:/hadoop/dfs/data
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    depends_on:
      - namenode
    healthcheck:
      interval: 5s
      retries: 100
    networks:
      - net
    ports:
      - 9866:9866
      - 50010:50010
  postgres:
    image: postgres:latest
    container_name: tpa-postgres
    ports:
      - 5433:5433
    volumes:
      - ./tpa-postgres/volumes:/tpa-postgres
      - ./datasource:/tpa-postgres/datasource
    networks:
      - net
    environment:
      - POSTGRES_PASSWORD=HelloMBDS
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pg-admin
    networks:
      - net
    environment:
      PGADMIN_DEFAULT_EMAIL: mbds@mbds.com
      PGADMIN_DEFAULT_PASSWORD: HelloMBDS
    ports:
      - "5050:80"
  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    networks:
      - net
    ports:
      - "10000:10000"
  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9870 datanode:9866 hive-metastore-postgresql:5433"
    networks:
      - net
    ports:
      - "9083:9083"
  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    networks:
      - net
  presto-coordinator:
    image: shawnzhu/prestodb:0.181
    networks:
      - net
    ports:
      - "8080:8080"
#
  mongo:
    image: mongo
    container_name: tpa-mongo
    restart: always
    networks:
      - net
    volumes:
      - ./tpa-mongo/volumes:/tpa-mongo
      - ./datasource/datasource_utf8/mongo:/tpa-mongo/datasource
  mongo-express:
    image: mongo-express
    networks:
      - net
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

  couchdb:
    image: couchdb
    container_name: tpa-couchdb
    working_dir: /tpa-couchdb
    ports:
      - "5984:5984"
    environment:
      COUCHDB_USER: admin
      COUCHDB_PASSWORD: password
    volumes:
      - ./tpa-couchdb/volumes:/tpa-couchdb
      - ./datasource/datasource_utf8/couchdb:/tpa-couchdb/datasource

  # Ce container permet de populer la base de donn√©es couchdb
  python:
    image: python:3.8
    depends_on: 
      - couchdb
    build: ./tpa-python
    container_name: tpa-python
    ports:
      - "5001:5001"
    volumes:
      - ./tpa-python/volumes:/tpa-python
      - ./datasource/datasource_utf8/couchdb:/tpa-python/datasource
      
  python-app:
    container_name: tpa-python-app
    build: ./tpa-python-app
    depends_on:
      - namenode
    networks:
      - net
      
    
volumes:
  datanode: {}
  namenode: {}
#  spark: {}
#  sparkdatamaster: {}
#  sparkdataworker: {}
  postgres-data:
  cassandra_data: